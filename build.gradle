plugins {
    id 'com.google.cloud.tools.jib' version '2.1.0'
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.fldys.mesh'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'//log4j2
//		exclude group: 'commons-logging', module: 'commons-logging'//log4j2
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.commons:commons-pool2'//redis
    implementation 'com.google.code.gson:gson:2.8.6'
//	implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'


    implementation 'io.netty:netty-all:4.1.45.Final'
    implementation 'io.netty:netty-codec-mqtt:4.1.45.Final'
    implementation 'com.corundumstudio.socketio:netty-socketio:1.7.18'
//	implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'

    implementation 'com.lmax:disruptor:3.4.2'//async log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

jib {
    from {
        image = 'openjdk:alpine'
    }
    to {
        image = 'registry.hub.docker.com/fldy/helloword'
        auth {
            username = 'fldy'
            
        }
//        credHelper = 'osxkeychain'
    }
    allowInsecureRegistries = true;
}
